package com.food.delivery.facade;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.food.delivery.model.Menu;
import com.food.delivery.model.RestaurantProfile;
import com.food.delivery.model.User;
import com.food.delivery.pojo.MenuResource;
import com.food.delivery.pojo.RestaurantProfileResource;
import com.food.delivery.repository.RestaurantProfileRepository;
import com.food.delivery.repository.UserRepository;
import com.food.delivery.services.RestaurantProfileService;

@Component
public class RestaurantProfileFacade {

	private static final Logger logger = LoggerFactory.getLogger(CustomerProfileFacade.class);

	@Autowired
	private RestaurantProfileService service;

	@Autowired
	private RestaurantProfileRepository restaurantProfileRepo;

	@Autowired
	UserRepository userRepository;

	public void addRestaurantProfile(RestaurantProfileResource restaurantResource) {

		RestaurantProfile restaurant = new RestaurantProfile();
		restaurant.setFirstname(restaurantResource.getFirstname());
		restaurant.setLastname(restaurantResource.getLastname());
		restaurant.setUsername(restaurantResource.getUsername());
		restaurant.setAddress(restaurantResource.getAddress());
		restaurant.setPhone_no(restaurantResource.getPhone_no());
		restaurant.setRestaurant_name(restaurantResource.getRestaurant_name());
		restaurant.setHours_of_operation(restaurantResource.getHours_of_operation());

//		Long userId = userRepository.userByUsername(book.getUsername());
//		bookModel.setUser_id(userId);
//		logger.debug("user id = "+userId);

		service.addRestaurantProfile(restaurant);

	}

	public RestaurantProfileResource getRestaurantProfile(String firstName) {

		RestaurantProfile restaurantProfile = new RestaurantProfile();

		restaurantProfile = service.getRestaurantProfile(firstName);

		RestaurantProfileResource restaurantProfileResource = convertDTOtoResource(restaurantProfile);

		return restaurantProfileResource;

	}

	private RestaurantProfileResource convertDTOtoResource(RestaurantProfile restaurant) {
		RestaurantProfileResource restaurantProfileResource = new RestaurantProfileResource();

		restaurantProfileResource.setFirstname(restaurant.getFirstname());
		restaurantProfileResource.setLastname(restaurant.getLastname());
		restaurantProfileResource.setAddress(restaurant.getAddress());
		restaurantProfileResource.setUsername(restaurant.getUsername());
		restaurantProfileResource.setRestaurant_name(restaurant.getRestaurant_name());
		restaurantProfileResource.setHours_of_operation(restaurant.getHours_of_operation());
		
		return restaurantProfileResource;
	}

	public boolean updateRestaurantProfile(RestaurantProfileResource restaurantProfileResource) {

		String username = restaurantProfileResource.getUsername();
		String firstname = restaurantProfileResource.getFirstname();
		String lastname = restaurantProfileResource.getLastname();
		String phoneNo = restaurantProfileResource.getPhone_no();
		String address = restaurantProfileResource.getAddress();
		String restaurant = restaurantProfileResource.getRestaurant_name();
		int hrs = restaurantProfileResource.getHours_of_operation();

		Optional<User> userData = userRepository.findByUsername(username);
		User userVal = userData.get();

		if (restaurantProfileRepo.existsByUserId(userVal.getId())) {

			Optional<RestaurantProfile> restrnt = restaurantProfileRepo.findByUsername(username);
			RestaurantProfile restrnt1 = restrnt.get();

			try {

				restaurantProfileRepo.updateRestaurantProfile(restrnt1.getId(), firstname, lastname, phoneNo, address,
						restaurant, hrs);
			} catch (Exception e) {
				logger.error("Could not update user profile : {}", e);
			}

		} else {
			logger.error("User profile does not exist for user ID: " + userVal.getId());
		}
		return true;
	}
	
	public List<String> getRestaurantList() {

		List<String> restaurants = restaurantProfileRepo.findAllRestaurants();

		return restaurants;

	}

	
	public void addMenu(MenuResource menuResource) {

		Menu menu = new Menu();

//		Long userId = userRepository.userByUsername(book.getUsername());
//		bookModel.setUser_id(userId);
//		logger.debug("user id = "+userId);

		service.addRestaurantProfile(restaurant);

	}
}
