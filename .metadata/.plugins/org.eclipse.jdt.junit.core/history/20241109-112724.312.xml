<?xml version="1.0" encoding="UTF-8"?><testrun name="OrdersControllerTest" project="food" tests="6" started="6" failures="1" errors="1" ignored="0">
  <testsuite name="com.food.delivery.controller.OrdersControllerTest" time="1.797" displayname="OrdersControllerTest" uniqueid="[engine:junit-jupiter]/[class:com.food.delivery.controller.OrdersControllerTest]">
    <testcase name="testUpdateOrderStatus_Failure" classname="com.food.delivery.controller.OrdersControllerTest" time="1.458" displayname="testUpdateOrderStatus_Failure()" uniqueid="[engine:junit-jupiter]/[class:com.food.delivery.controller.OrdersControllerTest]/[method:testUpdateOrderStatus_Failure()]">
      <error>jakarta.servlet.ServletException: Request processing failed: java.lang.NullPointerException: Cannot invoke "String.isEmpty()" because the return value of "com.food.delivery.pojo.OrdersResource.getFoodName()" is null&#13;
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1022)&#13;
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)&#13;
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)&#13;
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)&#13;
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)&#13;
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)&#13;
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)&#13;
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)&#13;
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)&#13;
	at com.food.delivery.controller.OrdersControllerTest.testUpdateOrderStatus_Failure(OrdersControllerTest.java:108)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
Caused by: java.lang.NullPointerException: Cannot invoke "String.isEmpty()" because the return value of "com.food.delivery.pojo.OrdersResource.getFoodName()" is null&#13;
	at com.food.delivery.controller.OrderController.updateOrderStatus(OrderController.java:148)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)&#13;
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)&#13;
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)&#13;
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)&#13;
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)&#13;
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)&#13;
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)&#13;
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)&#13;
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)&#13;
	... 12 more&#13;
&#13;
</error>
    </testcase>
    <testcase name="testAddOrder_Success" classname="com.food.delivery.controller.OrdersControllerTest" time="0.079" displayname="testAddOrder_Success()" uniqueid="[engine:junit-jupiter]/[class:com.food.delivery.controller.OrdersControllerTest]/[method:testAddOrder_Success()]"/>
    <testcase name="testGetOrders_NotFound" classname="com.food.delivery.controller.OrdersControllerTest" time="0.074" displayname="testGetOrders_NotFound()" uniqueid="[engine:junit-jupiter]/[class:com.food.delivery.controller.OrdersControllerTest]/[method:testGetOrders_NotFound()]"/>
    <testcase name="testAddOrder_BadRequest" classname="com.food.delivery.controller.OrdersControllerTest" time="0.069" displayname="testAddOrder_BadRequest()" uniqueid="[engine:junit-jupiter]/[class:com.food.delivery.controller.OrdersControllerTest]/[method:testAddOrder_BadRequest()]"/>
    <testcase name="testGetOrders_Success" classname="com.food.delivery.controller.OrdersControllerTest" time="0.057" displayname="testGetOrders_Success()" uniqueid="[engine:junit-jupiter]/[class:com.food.delivery.controller.OrdersControllerTest]/[method:testGetOrders_Success()]"/>
    <testcase name="testUpdateOrderStatus_Success" classname="com.food.delivery.controller.OrdersControllerTest" time="0.025" displayname="testUpdateOrderStatus_Success()" uniqueid="[engine:junit-jupiter]/[class:com.food.delivery.controller.OrdersControllerTest]/[method:testUpdateOrderStatus_Success()]">
      <failure>java.lang.AssertionError: Status expected:&lt;200&gt; but was:&lt;405&gt;&#13;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)&#13;
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)&#13;
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:637)&#13;
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)&#13;
	at com.food.delivery.controller.OrdersControllerTest.testUpdateOrderStatus_Success(OrdersControllerTest.java:101)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
