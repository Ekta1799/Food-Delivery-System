plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.food'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

compileJava {
    options.compilerArgs << "-parameters"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.apache.httpcomponents.client5:httpclient5'
	testImplementation 'org.mockito:mockito-inline:4.11.0'
	testImplementation ('org.springframework.boot:spring-boot-starter-web')
	
	runtimeOnly 'org.postgresql:postgresql'
	
	implementation ("org.springframework.boot:spring-boot-starter-web")
	implementation ("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation ("org.springframework.boot:spring-boot-starter-security")
	
	implementation ("org.projectlombok:lombok")
	
	implementation ("io.jsonwebtoken:jjwt-api:0.11.5")
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.platform:junit-platform-suite-api:1.7.+'
	
	testImplementation 'org.mockito:mockito-core:4.11.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'
	
	// Mockito Core for core functionalities
testImplementation 'org.mockito:mockito-core:4.11.0'

// Mockito Inline for `when` static mocking, etc.
testImplementation 'org.mockito:mockito-inline:4.11.0'

// Spring Boot Test for integration with Springâ€™s test classes
testImplementation 'org.springframework.boot:spring-boot-starter-test'

// JSONPath support for result matching in tests
testImplementation 'com.jayway.jsonpath:json-path:2.6.0'
	
	testImplementation ("org.springframework.security:spring-security-test")
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(GroovyCompile).configureEach {
	groovyOptions.parameters = true
}
