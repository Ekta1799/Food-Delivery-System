-- food.cart definition

-- Drop table

-- DROP TABLE food.cart;

CREATE TABLE food.cart (
	id bigserial NOT NULL,
	food_id int8 NULL,
	customer_id int8 NULL,
	CONSTRAINT cart_customer_un UNIQUE (customer_id),
	CONSTRAINT cart_food_un UNIQUE (food_id),
	CONSTRAINT cart_pkey PRIMARY KEY (id)
);


-- food.cart foreign keys

ALTER TABLE food.cart ADD CONSTRAINT cart_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES food.users(id);
ALTER TABLE food.cart ADD CONSTRAINT cart_food_id_fkey FOREIGN KEY (food_id) REFERENCES food.menu(id);

----------------------------------------------------------------------

-- food.customer_profile definition

-- Drop table

-- DROP TABLE food.customer_profile;

CREATE TABLE food.customer_profile (
	id bigserial NOT NULL,
	user_id int8 NULL,
	firstname varchar(255) NULL,
	lastname varchar(255) NULL,
	username varchar(255) NULL,
	phone_no varchar(255) NULL,
	address varchar(255) NULL,
	payment_type varchar(255) NULL,
	CONSTRAINT customer_profile_pkey PRIMARY KEY (id),
	CONSTRAINT customer_profile_un UNIQUE (user_id)
);


-- food.customer_profile foreign keys

ALTER TABLE food.customer_profile ADD CONSTRAINT customer_profile_user_id_fkey FOREIGN KEY (user_id) REFERENCES food.users(id);

------------------------------------------------------------------------------

-- food.menu definition

-- Drop table

-- DROP TABLE food.menu;

CREATE TABLE food.menu (
	id bigserial NOT NULL,
	restaurant_id int8 NULL,
	food_item varchar(255) NULL,
	price float8 NULL,
	cuisine varchar(255) NULL,
	veg bool NULL,
	CONSTRAINT menu_pkey PRIMARY KEY (id)
);


-- food.menu foreign keys

ALTER TABLE food.menu ADD CONSTRAINT menu_restaurant_id_fkey FOREIGN KEY (restaurant_id) REFERENCES food.restaurant_profile(id);

------------------------------------------------------------------------------------

-- food.orders definition

-- Drop table

-- DROP TABLE food.orders;

CREATE TABLE food.orders (
	id bigserial NOT NULL,
	food_id int8 NULL,
	customer_id int8 NULL,
	status varchar(255) NULL,
	restaurant_id int8 NULL,
	food_price float8 NULL,
	no_of_items int4 NULL,
	CONSTRAINT orders_pkey PRIMARY KEY (id),
	CONSTRAINT orders_status_check CHECK (((status)::text = ANY (ARRAY[('PREPARING'::character varying)::text, ('OUT_FOR_DELIVERY'::character varying)::text, ('DELIVERED'::character varying)::text, ('CANCELLING'::character varying)::text, ('RESCHEDULING'::character varying)::text])))
);


-- food.orders foreign keys

ALTER TABLE food.orders ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES food.users(id);
ALTER TABLE food.orders ADD CONSTRAINT orders_food_id_fkey FOREIGN KEY (food_id) REFERENCES food.menu(id);
ALTER TABLE food.orders ADD CONSTRAINT orders_restauarnt_id_fkey FOREIGN KEY (restaurant_id) REFERENCES food.restaurant_profile(id);

-------------------------------------------------------------------------------------

-- food.payment definition

-- Drop table

-- DROP TABLE food.payment;

CREATE TABLE food.payment (
	id bigserial NOT NULL,
	customer_id int8 NULL,
	"type" varchar(20) NULL,
	CONSTRAINT payment_customer_un UNIQUE (customer_id),
	CONSTRAINT payment_pkey PRIMARY KEY (id)
);


-- food.payment foreign keys

ALTER TABLE food.payment ADD CONSTRAINT payment_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES food.users(id);

-----------------------------------------------------------------------------------------

-- food.restaurant_profile definition

-- Drop table

-- DROP TABLE food.restaurant_profile;

CREATE TABLE food.restaurant_profile (
	id bigserial NOT NULL,
	user_id int8 NULL,
	firstname varchar(255) NULL,
	lastname varchar(255) NULL,
	username varchar(255) NULL,
	restaurant_name varchar(255) NULL,
	phone_no varchar(255) NULL,
	address varchar(255) NULL,
	hours_of_operation int4 NULL,
	CONSTRAINT restaurant_profile_pkey PRIMARY KEY (id),
	CONSTRAINT restaurant_profile_un UNIQUE (user_id)
);


-- food.restaurant_profile foreign keys

ALTER TABLE food.restaurant_profile ADD CONSTRAINT restaurant_profile_user_id_fkey FOREIGN KEY (user_id) REFERENCES food.users(id);

---------------------------------------------------------------------------------------------------

-- food.roles definition

-- Drop table

-- DROP TABLE food.roles;

CREATE TABLE food.roles (
	id serial4 NOT NULL,
	"name" varchar(50) NULL,
	CONSTRAINT roles_name_check CHECK (((name)::text = ANY (ARRAY[('ROLE_CUSTOMER'::character varying)::text, ('ROLE_RESTAURANT_OWNER'::character varying)::text, ('ROLE_DELIVERY_PERSONNEL'::character varying)::text, ('ROLE_ADMIN'::character varying)::text]))),
	CONSTRAINT roles_pkey PRIMARY KEY (id)
);

-----------------------------------------------------------------------------

-- food.user_roles definition

-- Drop table

-- DROP TABLE food.user_roles;

CREATE TABLE food.user_roles (
	user_id int8 NOT NULL,
	role_id int4 NOT NULL,
	CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id)
);


-- food.user_roles foreign keys

ALTER TABLE food.user_roles ADD CONSTRAINT fkh8ciramu9cc9q3qcqiv4ue8a6 FOREIGN KEY (role_id) REFERENCES food.roles(id);
ALTER TABLE food.user_roles ADD CONSTRAINT fkhfh9dx7w3ubf1co1vdev94g3f FOREIGN KEY (user_id) REFERENCES food.users(id);

-----------------------------------------------------------------------------------

-- food.users definition

-- Drop table

-- DROP TABLE food.users;

CREATE TABLE food.users (
	id bigserial NOT NULL,
	email varchar(255) NULL,
	"password" varchar(255) NULL,
	username varchar(255) NULL,
	CONSTRAINT uk6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email),
	CONSTRAINT ukr43af9ap4edm43mmtq01oddj6 UNIQUE (username),
	CONSTRAINT users_pkey PRIMARY KEY (id)
);